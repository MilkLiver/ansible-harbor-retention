---
- name: Get project info
  uri:
    url: "https://{{ HARBOR_IP }}/api/v2.0/projects/{{ PROJECT_NAME }}"
    method: GET
    user: "{{ ACCOUNT_NAME }}"
    password: "{{ ACCOUNT_PASS }}"
    force_basic_auth: yes
    validate_certs: false
    follow_redirects: all
  register: project_info

- name: Project is not content retention_id
  debug:
    msg: "harbor project {{ project_info.json.name }} is no retention_id"
  when: "'retention_id' not in project_info.json.metadata"
    
- name: Project is content retention_id
  debug:
    msg: "harbor project {{ project_info.json.name }} retention_id is {{ project_info.json.metadata.retention_id }}"
  when: project_info.json.metadata.retention_id is defined

- name: Trigger retention
  uri:
    url: "https://{{ HARBOR_IP }}/api/v2.0/retentions/{{ project_info.json.metadata.retention_id }}/executions"
    method: POST
    user: "{{ ACCOUNT_NAME }}"
    password: "{{ ACCOUNT_PASS }}"
    body: "{{ lookup('file','../files/api_trigger_project_retention.json') }}"
    body_format: json
    force_basic_auth: yes
    validate_certs: false
    follow_redirects: all
    status_code: 201
  when: "'retention_id' in project_info.json.metadata"
  register: retention_info_headers
  
- name: Show retention info
  debug:
    msg: "{{ retention_info_headers }}"
  when: "'retention_id' in project_info.json.metadata"


- name: Polling Retention Status
  uri:
    url: "{{ retention_info_headers.location }}/tasks"
    # url: "https://192.168.50.11/api/v2.0/retentions/13/executions/3831/tasks"
    method: GET
    user: "{{ ACCOUNT_NAME }}"
    password: "{{ ACCOUNT_PASS }}"
    force_basic_auth: yes
    validate_certs: false
    follow_redirects: all
  delay: "{{ IMAGE_RETENTINO_POLLING_DELAY }}"
  retries: "{{ IMAGE_RETENTINO_POLLING_RETRY }}"
  when: "'retention_id' in project_info.json.metadata"
  register: retention_polling_res
  until: "{{ retention_polling_res.json | selectattr('status', '!=', 'Success') | length == 0 }}"
